plugins {
	id 'org.springframework.boot' version '2.6.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
  id 'jacoco'
}

group = 'nl.tudelft.cse.sem.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2021.0.0-RC1")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul:2.2.10.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.projectlombok:lombok:1.18.20'
	implementation 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation project(path: ':commonUtility', configuration: 'default')

	// Read JWT tokens
	implementation 'com.auth0:java-jwt:3.18.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

sourceCompatibility = 1.11

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['nl.tudelft.*']
		excludes = [
				'envloader.*',
				'envloader.exceptions.*',
				'nl.tudelft.sem.EurekaServerApplication',
				'nl.tudelft.sem.JwtConfig',
				'nl.tudelft.sem.ZuulConfiguration',
				'nl.tudelft.sem.ZuulConfiguration$LookupHandlerMethodInterceptor',
				'nl.tudelft.sem.ZuulConfiguration$ZuulPostProcessor',
				'nl.tudelft.sem.ZuulConfiguration$LookupHandlerCallbackFilter',
		]
	}

	jacocoTestReport {
		dependsOn test

		afterEvaluate {
			getClassDirectories().setFrom(classDirectories.files.collect {
				fileTree(dir: it,
						exclude: [
								'**/envloader/*.class',
								'**/envloader/exceptions/*.class',
								'**/nl/tudelft/sem/EurekaServerApplication.class',
								'**/nl/tudelft/sem/JwtConfig.class',
								'**/nl/tudelft/sem/ZuulConfiguration.class',
								'**/nl/tudelft/sem/ZuulConfiguration$LookupHandlerMethodInterceptor.class',
								'**/nl/tudelft/sem/ZuulConfiguration$ZuulPostProcessor.class',
								'**/nl/tudelft/sem/ZuulConfiguration$LookupHandlerCallbackFilter.class',
						]
				)
			})
		}
	}
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['nl.tudelft.sem.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}
	}
}